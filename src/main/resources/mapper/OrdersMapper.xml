<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为UserMapper接口方法提供sql语句配置 -->
<mapper namespace="com.aishang.dao.OrdersMapper">
    <!--查询省-->
    <select id="findUserAddr" parameterType="Integer" resultType="cities">
 select * from cities where parent_area_code=#{parent_area_code}
</select>
    <select id="findUserCity" parameterType="Integer" resultType="cities">
 select * from cities where parent_area_code=#{parent_area_code}
</select>
    <update id="updateAddr" parameterType="User" >
update user set addr=#{addr}, name=#{name},phone=#{phone}, code=#{code} where uid=#{uid}
    </update>
    <select id="findUserByUid" parameterType="Integer" resultType="User">
select * from user where uid=#{uid}
    </select>
    <!-- 创建订单-->
    <insert id="newOrder" parameterType="orders">
        insert into orders(total,ordertime,state,name,phone,addr,uid)
        values (#{total},#{ordertime},#{state},#{name},#{phone},#{addr},#{uid});
        <selectKey keyProperty="oid" resultType="int" order="AFTER">
            select LAST_INSERT_ID();
        </selectKey>
    </insert>
    <!--创建订单项-->
    <insert id="newOrderitem" parameterType="orderitem">
        insert into orderitem(count,subtotal,pid,oid)
        values (#{count},#{subtotal},#{pid},#{oid});
    </insert>
    <!--根据id查询订单-->
    <resultMap id="OrderByOid" type="OrdersExt">
    <id property="oid" column="oid"/>
        <result property="total" column="total"/>
        <result property="ordertime" column="ordertime"/>
        <result property="state" column="state"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="addr" column="addr"/>
        <result property="uid" column="uid"/>
        <collection property="orderitemExtList" ofType="orderitemExt" >
            <id property="itemid" column="itemid"/>
            <result property="count" column="count"/>
            <result property="subtotal" column="subtotal"/>
            <result property="pid" column="pid"/>
            <result property="oid" column="oid"/>
            <association property="product" javaType="product">
                <id property="pid" column="pid"/>
                <result column="pname" property="pname"/>
                <result column="market_price" property="market_price"/>
                <result column="shop_price" property="shop_price"/>
                <result column="pdesc" property="pdesc"/>
                <result column="pdate" property="pdate"/>
                <result column="csid" property="csid"/>
                <result column="pstate" property="pstate"/>
                <result column="pimage" property="pimage"/>
            </association>
        </collection>
    </resultMap>

    <select id="findOrderByOid" parameterType="int" resultMap="OrderByOid">
        select orders.*,orderitem.*,product.*
        from orders inner join orderitem
        on orders.oid = orderitem.oid
        inner join  product
        on orderitem.pid = product.pid
        where orders.oid =#{oid}
    </select>
    <!--修改订单状态-->
    <update id="changeState" parameterType="OrdersExt">
        update orders set state = #{state} where oid = #{oid}
    </update>
  <!--查询某个用户下的订单个数-->
    <select id="findOrdersCount" parameterType="pageBenForOrder" resultType="int">
        select count(*)
        from orders inner join orderitem
        on orders.oid = orderitem.oid
        inner join product
        on orderitem.pid =product.pid
        where orders.uid= #{uid}
    </select>
    <!--查询某个用户下的订单列表-->
    <select id="findOrdersByUid" parameterType="pageBenForOrder" resultMap="OrderByOid">
        select *
        from(select *
        from orders
        where orders.uid=#{uid}
         limit #{startIndex},#{pageSize}) a inner join orderitem
         on a.oid= orderitem.oid
         inner join product
         on orderitem.pid = product.pid
         ORDER BY a.oid desc
    </select>

</mapper>